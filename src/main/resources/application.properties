spring.application.name=cios-content-service
server.port=7002

management.endpoints.web.exposure.include=health

#-------------------- PostgreSQL configuration--------------------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/sunbird
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.main.allow-bean-definition-overriding=true

#-------------------------tranformation-------------------------------------
transformation.source-to-target.spec.path=/Transformation/cornell.json
cornell.progress.transformation.source-to-target.spec.path=/Transformation/cornellProgressJson.json

#------------------------Kafka Configuration---------------------------------
#kafka Server
spring.kafka.bootstrap.servers=localhost:9092
spring.kafka.cornell.topic.name=dev.enrollment.progress
spring.kafka.consumer.group.id=enrollment-progress
#kafka properties
kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=15000
kafka.max.poll.records=100
kafka.auto.commit.interval.ms=10000

#--------------------Redis config-----------------------------------------------
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.cacheTtl= 86400
search.result.redis.ttl=600

#-----------Cassandra Configuration-----------------
spring.data.cassandra.startupTimeoutInSeconds=100000
spring.data.cassandra.contact-points=
spring.data.cassandra.port=9042
spring.data.cassandra.keyspace-name=sunbird
spring.data.cassandra.username=sunbird
spring.data.cassandra.password=""
spring.data.cassandra.local-datacenter=DC1
cassandra.config.host=

#---------------Service registry configuration--------------
service.locator.host=http://localhost:8096
service.locator.fixedurl=/serviceregistry/api/v1/callExternalApi

#---------------cornell configuration----------------
cornell.enrollment.service.code=cornell-enrollment-list
scheduler.enabled=true
scheduler.fixedRate=600000
scheduler.cron=0 13 17 * * *
cornell.enrollment.list.limit=10
cornell.enrollment.list.course_type=lesson
cornell.date.range=7

#-------------------cb-pores partnerService---------------------------------------------
cb.pores.service.url=http://localhost:7001
partner.read.path=/contentpartner/v1/readbypartnercode/
partner.create.update.path=/contentpartner/v1/create
cios.read.api.fixed.url=/cios/v1/content/readby/externalid/

#--------------ElasticSearch configuration--------------------
elasticsearch.host=localhost
elasticsearch.port=9200
elasticsearch.username=
elasticsearch.password=
elastic.required.field.cios.content.json.path=/EsFieldsMapping/esRequiredFieldsJsonFilePath.json


#-----------------Partner Code Configurations--------------------
cornell.partner.code=CORNELL
upgrad.partner.code=UPGRAD
coursera.partner.code=COURSERA

#-------------------Cloud Storage Service properties------------------------
cloud.storage.type.name=azure
cloud.storage.key=igot
cloud.storage.secret=cloudStorageKey
cloud.container.name=sb-cb-ext
cloud.profile.image.container.name=igot
cloud.storage.endpoint=endpoint

cios.cloud.container.name=cb-cios-dev
cios.logs.cloud.folder.name=cios-logs

kafka.topic.content.onboarding=cios.content.onboard
content.onboarding.consumer.group=cios.content.onboard.group
